# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: http://doc.scrapy.org/en/latest/topics/item-pipeline.html


import json
import codecs
#from collections import OrderedDict
import cx_Oracle
from sqlalchemy import *
from sqlalchemy.sql import select
from sqlalchemy.schema import *


class PmPipeline(object):
    def process_item(self, item, spider):
        return item
class User(Base):
    # 表的名字:
    __tablename__ = 'user'

    # 表的结构:
    pm25 = Column(String(20), primary_key=True)
    name = Column(String(20))


class JsonWithEncodingPipeline(object):
    def __init__(self):
        self.file = codecs.open('data_utf8.json', 'w', encoding='utf-8')

    def process_item(self, item, spider):
        #line = json.dumps(OrderedDict(item), ensure_ascii=False, sort_keys=False,indent=1) + "\n"
        line = json.dumps(item, ensure_ascii=False, sort_keys=False, indent=1) + "\n"
        self.file.write(line)
        return item

    def close_spider(self, spider):
        self.file.close()
def changeItemToDbObj(item):
        obj = User()
class OraclePipeline(object):
    def __init__(self):
        self.engine =create_engine('oracle://china:oracle@59.108.92.221:1521/orcl', echo=True)
        self.session = sessionmaker(bind=self.engine)
    def process_item(self, item, spider):
       for  one in item:

    def close_spider(self, spider):
        self.curs.close()
        self.conn.close()